version: "2.2"

services:
  frontend:
    build: frontend
    volumes:
      # Mount source-code for development
      - ./:/app

  backend:
    build: backend
    volumes:
      # Mount source-code for development
      - ./:/app

  console:
    build: console
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      # Mount source-code for development
      - ./:/app
    working_dir: /app

  storage:
    build: storage
    volumes:
      # Mount source-code for development
      - ./:/app

  api:
    build: api
    volumes:
      # Mount source-code for development
      - ./:/app

  nginx:
    image: nginx:1.19-alpine
    ports:
      - "80"
    volumes:
      - ./:/app
      - ./docker/nginx/vhost.conf:/etc/nginx/conf.d/vhost.conf
#      - ./docker/nginx/vhost.conf:/etc/nginx/conf.d/vhost_single_domain.conf
#      - ./docker/nginx-proxy-le/certs:/etc/nginx/certs
    depends_on:
      - api
      - frontend
      - backend
      - console
      - storage
    environment:
      LETSENCRYPT_HOST: "funerai.com,api.funerai.com,backend.funerai.com,storage.funerai.com"
      LETSENCRYPT_EMAIL: bogatkoia@yandex.ru
      VIRTUAL_HOST: "funerai.com,api.funerai.com,backend.funerai.com,storage.funerai.com"
      VIRTUAL_PORT: 80
      NGINX_PORT: 80

  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: unless-stopped
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx-proxy-le/certs:/etc/nginx/certs
      - ./docker/nginx-proxy-le/conf.d:/etc/nginx/conf.d
      - ./docker/nginx-proxy-le/vhost.d:/etc/nginx/vhost.d
      - ./docker/nginx-proxy-le/html:/usr/share/nginx/html
      - ./docker/nginx-proxy-le/dhparam:/etc/nginx/dhparam
      - ./docker/nginx-proxy-le/log_nginx-proxy:/var/log/nginx:rw
      - /var/run/docker.sock:/tmp/docker.sock:ro
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "100m"

  nginx-proxy-le:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: unless-stopped
    container_name: nginx-proxy-le
    volumes:
      - ./docker/nginx-proxy-le/certs:/etc/nginx/certs
      - ./docker/nginx-proxy-le/conf.d:/etc/nginx/conf.d
      - ./docker/nginx-proxy-le/vhost.d:/etc/nginx/vhost.d
      - ./docker/nginx-proxy-le/html:/usr/share/nginx/html
      - ./docker/nginx-proxy-le/dhparam:/etc/nginx/dhparam
      - ./docker/nginx-proxy-le/log_nginx-proxy:/var/log/nginx:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    env_file:
      - .env
    environment:
      - DEBUG=false
      - NGINX_PROXY_CONTAINER=nginx-proxy
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "100m"
#  node:
#    image: node:16-alpine
#    volumes:
#      - ./:/app
#    working_dir: /app
#
#  mailcatcher:
#    image: schickling/mailcatcher:latest
#    ports:
#      - 1080:1080

#  db:
#    image: mysql:8
#    volumes:
#      - /var/lib/mysql
#      - ./docker/mysql/config.cnf:/etc/mysql/conf.d/config.cnf
#    ports:
#      - 3306:3306
#    environment:
#      MYSQL_ROOT_PASSWORD: root
#      MYSQL_DATABASE: yii2-starter-kit
#      MYSQL_USER: ysk_dbu
#      MYSQL_PASSWORD: ysk_pass
  db:
    image: mariadb:10.4.6
    volumes:
      - ./docker/mysql/share:/root/share
      - /var/lib/mysql
      - ./docker/mysql/config.cnf:/etc/mysql/conf.d/config.cnf
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: yii2-starter-kit
      MYSQL_USER: ysk_dbu
      MYSQL_PASSWORD: ysk_pass

#  phpmyadmin:
#    image: phpmyadmin/phpmyadmin
#    container_name: pma
#    links:
#      - db
#    environment:
#      PMA_HOST: db
#      PMA_PORT: 3306
#      PMA_ARBITRARY: 1
#    ports:
#      - 8081:80

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24
          gateway: 192.168.1.1
